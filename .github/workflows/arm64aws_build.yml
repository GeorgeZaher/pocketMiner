name: arm64aws_build

## self runner C++ build hosted on AWS Arm64
## see: https://github.com/marketplace/actions/build-c-project

on: [push]

jobs:
  project-build:
    runs-on: self-hosted # self-hosted runner on AWS

    steps:

    - name: Check CPU
      run: |
        echo `lscpu | sed -n 's/^Architecture: *//p' |cut -d'_' -f 1`
        lscpu

    - name: Checkout
      uses: actions/checkout@v2.0.0

    - name: Add required build libraries, just in case...
      run: sudo apt-get install libuv1-dev build-essential cmake libuv1-dev libmicrohttpd-dev libssl-dev

    - name: Build project
      uses: nicledomaS/cmake_build_action@v1.4
# cmake_build_action options at: https://github.com/marketplace/actions/build-c-project
      with:
        cmake_args: -DWITH_HWLOC=OFF;-DCMAKE_BUILD_TYPE=Release;-DWITH_OPENCL=OFF;-DWITH_CUDA=OFF;-DWITH_ARGON2=OFF;-DXMRIG_DEPS=${{github.workspace}}/xmrig-deps/gcc/x64/include
        submodule_update: ON

    - name: Locate our binaries
      run: |
        cd ${{github.workspace}}/build/
        mkdir artifacts/
        mv xmrig* artifacts/
        cd artifacts/
        ls -la

    - name: Upload XMRIGCC artifacts
      uses: actions/upload-artifact@v1
      with:
        name: XMRIGCC
        # path: app/build/outputs/apk/debug/app-debug.apk
        path: ${{github.workspace}}/build/artifacts


