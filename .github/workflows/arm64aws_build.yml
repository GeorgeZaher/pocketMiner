name: arm64aws_build

## self runner C++ build hosted on AWS Arm64
## see: https://github.com/marketplace/actions/build-c-project

on: [push]

jobs:
  project-build:
    runs-on: self-hosted # self-hosted runner on AWS

    steps:

    - name: Show CPU Architecture
      run: lscpu

    - name: Checkout this branch of PocketMiner
      uses: actions/checkout@v2.0.0

    - name: Apt install required libraries
      run: |
        sudo apt -y update
        sudo apt -y install libuv1-dev build-essential cmake libmicrohttpd-dev libssl-dev

    # cmake_build_action options at: https://github.com/marketplace/actions/build-c-project
    # replace this with a manual cmake process which customizes the build
    - name: Build binaries
      uses: nicledomaS/cmake_build_action@v1.4
      with:
        cmake_args: -DWITH_HWLOC=OFF;-DCMAKE_BUILD_TYPE=Release;-DWITH_OPENCL=OFF;-DWITH_CUDA=OFF;-DWITH_ARGON2=OFF;-DXMRIG_DEPS=${{github.workspace}}/xmrig-deps/gcc/x64/include
        submodule_update: ON

    - name: Gather binaries into 'build/binaries/' directory
      run: |
        cd ${{github.workspace}}/build/ && mkdir binaries/
        mv xmrig* binaries/ && ls -la binaries/

    - name: Upload binaries as zipped artifact
      uses: actions/upload-artifact@v1
      with:
        name: binaries
        path: ${{github.workspace}}/build/binaries

    - name: Run xmrigMiner for 45 seconds to see if it works
      run: |
        cd ${{github.workspace}}/build/binaries/ && ls -la
        sudo chmod +x ./xmrigMiner
        timeout 45 ./xmrigMiner -o gulf.moneroocean.stream:20128 -u dERoQY3fRgQfG2HpErJ3R4YYBx4aPKF19LT5EnzVsTNZZDPFRvNz9VWG7owvJUiGqWjZ1btyDPT6DcgC4QKAQGsg9qWePwEsRc --tls -k --coin dero -a astrobwt --daemonized


