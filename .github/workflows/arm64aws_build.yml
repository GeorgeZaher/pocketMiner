name: arm64aws_build

## self runner C++ build hosted on AWS Arm64
## see: https://github.com/marketplace/actions/build-c-project

on: [push]

jobs:
  project-build:
    runs-on: ubuntu-latest # this part will be replaced with self-runner on AWS

    steps:

    - name: Check CPU   # if: ${{ env.DAY_OF_WEEK == 'Mon' }}     lscpu -p=cpu | grep -v ^#
      run: |
        ARCH = lscpu | sed -n 's/^Architecture: *//p'
        echo $ARCH


    - name: Checkout
      uses: actions/checkout@v2.0.0

    - name: Add required build library
      run: sudo apt-get install libuv1-dev

    - name: Build project
      uses: nicledomaS/cmake_build_action@v1.4
       # cmake_build_action options at: https://github.com/marketplace/actions/build-c-project
      with:
        cmake_args: -DWITH_HWLOC=OFF;-DCMAKE_BUILD_TYPE=Release;-DWITH_OPENCL=OFF;-DWITH_CUDA=OFF;-DWITH_ARGON2=OFF;-DXMRIG_DEPS=${{github.workspace}}/xmrig-deps/gcc/x86/include
        submodule_update: ON

    - name: Locate our new binary artifact
      run: |
        cd ${{github.workspace}}/build/
        ls -la
        mkdir artifacts
        mv xmrigDaemon xmrigcc/
        mv xmrigMiner xmrigcc/
        mv xmrigServer xmrigcc/

# -rwxr-xr-x  1 runner docker  178968 Nov  5 01:26 xmrigDaemon
# -rwxr-xr-x  1 runner docker 4095912 Nov  5 01:28 xmrigMiner
# -rwxr-xr-x  1 runner docker 1999008 Nov  5 01:27 xmrigServer

    - name: Upload XMRIG artifact
      uses: actions/upload-artifact@v1
      with:
        name: XMRIGCC
        # path: app/build/outputs/apk/debug/app-debug.apk
        path: xmrigcc/xmrigcc/build/artifacts


